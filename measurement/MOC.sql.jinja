{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
with vragenlijsten_hix as (
    select vragenlijst.opslagid, lijstnaam.lijstnaam, vragen.stelling, keuzelijst.omschr, vragen.vraagid, antwoorden.patientnr, antwoorden.opslagid as antwoord_opslagid
        , antwoorden.antwoord, keuzelijst.code,vragenlijst.datum, vragenlijst.tijd, vragen.korteoms
    from {{project_id}}.hix.VRLIJST_VROPSLG antwoorden
    join {{project_id}}.hix.VRLIJST_LSTOPSLG  as vragenlijst on vragenlijst.OPSLAGID = antwoorden.BEANTWID
    join {{project_id}}.hix.VRLIJST_LIJSTDEF  as lijstnaam on lijstnaam.LIJSTID = vragenlijst.LIJSTID
    join  {{project_id}}.hix.VRLIJST_VRAGEN as vragen on vragen.VRAAGID = REALVRID
    left outer join {{project_id}}.hix.VRLIJST_KEUZELST as keuzelijst on  keuzelijst.CODE = antwoorden.Antwoord
    where lijstnaam.lijstnaam = 'Registratieformulier MOC'
),cte_moc as (
    select distinct patientnr, opslagid, vraagid, antwoord_opslagid, stelling, antwoord
    from vragenlijsten_hix 
    where opslagid in (
            select opslagid 
            from vragenlijsten_hix 
            where stelling = 'Nieuw/follow-up registratieformulier' and omschr = 'nieuw'
        ) 
        and vraagid in ('0000002091', '0000002092', '0000002093', 'ZH00000203', 'ZH00000204', 'ZH00000206', 'ZH00000209', 'ZH00000211', 'ZH00000212') and not antwoord in ('', 'onbekend', '999')
),cte_moc2 as (
    select distinct patientnr, opslagid, antwoord, safe_cast(format_date('%Y-%m-%d', parse_date('%d-%m-%Y',antwoord)) as date) as measurement_date
        ,safe_cast(concat(format_date('%Y-%m-%d', parse_date('%d-%m-%Y', antwoord)), ' 00:00:00') as datetime) as measurement_datetime
    from  vragenlijsten_hix where stelling = 'Incidentiedatum' and not antwoord = ''
),cte_moc3 as (
    select distinct opslagid, antwoord_opslagid
    from vragenlijsten_hix 
    where opslagid in (
            select opslagid 
            from vragenlijsten_hix 
            where stelling = 'Nieuw/follow-up registratieformulier' and omschr = 'nieuw'
        ) 
        and vraagid in ('ZH00001637', 'ZH00001664')
), cte as (
    select distinct
        concat('MOC_', cte_moc.antwoord_opslagid, '_', cte_moc.patientnr, '_', measurement_datetime) as measurement_id	
        ,cte_moc.patientnr as person_id
        ,concat('HIXVRAGENLIJSTEN_',cte_moc.vraagid) as measurement_concept_id
        ,measurement_date
        ,measurement_datetime
        ,cast(null as string) as measurement_time
        ,'ADMINISTRATION_RECORD' as measurement_type_concept_id
        ,case when regexp_contains(cte_moc.antwoord, '<') then 'LESS'
        when regexp_contains(cte_moc.antwoord, '>') then 'MORE' 
        else 'EQUAL' end as operator_concept_id 
        ,case  when cte_moc.vraagid in ('0000002091', '0000002092', '0000002093') and regexp_contains(cte_moc.antwoord, '[0-9]') then cast(replace(regexp_replace(trim(cte_moc.antwoord, ','), r'[^0-9,\.]', ''), ',', '.') as float64) 
        else null end as value_as_number
        ,concat('HIXVRAGENLIJSTEN_', cte_moc.antwoord, '_', cte_moc.vraagid) as value_as_concept_id
        ,concat('HIXVRAGENLIJSTEN_', cte_moc.vraagid) as unit_concept_id 
        ,cast(null as float64) as range_low
        ,cast(null as float64) as range_high
        --,cast(null as string) as provider_id
        --,cast(null as string) as visit_occurrence_id
        --,cast(null as string) as visit_detail_id
        ,concat('HIXVRAGENLIJSTEN_', cte_moc.vraagid) as measurement_source_value
        ,cast(null as string) as measurement_source_concept_id
        ,cast(null as string) as unit_source_value
        ,cast(null as string) as unit_source_concept_id
        ,cast(cte_moc.antwoord as string) as value_source_value 
        ,if(
            cte_moc3.antwoord_opslagid is not null,
            concat('MOC_', cte_moc3.antwoord_opslagid, '_', cte_moc.patientnr),
            cast(null as string) 
        ) as measurement_event_id
        ,if(
            cte_moc3.antwoord_opslagid is not null,
            "observation",
            cast(null as string) 
        ) as meas_event_field_concept_id
    from cte_moc 
    inner join cte_moc2 on cte_moc2.opslagid = cte_moc.opslagid 
    left join cte_moc3 on cte_moc3.opslagid = cte_moc.opslagid
    where measurement_date is not null
)
SELECT cte.*
    , COALESCE(ARRAY_AGG(vd.provider_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)], ARRAY_AGG(v.provider_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)]) as provider_id
    , ARRAY_AGG(v.visit_occurrence_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_occurrence_id
    , ARRAY_AGG(vd.visit_detail_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_detail_id
FROM cte
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_occurrence_upload v ON v.person_id = cte.person_id AND cte.measurement_datetime >= v.visit_start_datetime and cte.measurement_datetime <= v.visit_end_datetime 
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_detail_upload vd ON v.visit_occurrence_id = vd.visit_occurrence_id AND cte.measurement_datetime >= vd.visit_detail_start_datetime and cte.measurement_datetime <= vd.visit_detail_start_datetime
inner join {{project_id}}.{{dataset_id_work}}.person_upload p
on cte.person_id = p.person_id
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20