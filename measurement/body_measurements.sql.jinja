select distinct
    concat("METINGEN_",upper(met.label),'_', AutoID) as measurement_id	
    ,cast(met.patientnr as string) as person_id
    ,met.label as measurement_concept_id
    ,CAST(met.meet_datum as DATE) as measurement_date
    ,DATETIME(
       CAST(met.meet_datum as DATE), 
       PARSE_TIME("%T", met.meet_tijd)
    ) as measurement_datetime  
    ,met.meet_tijd as measurement_time
    ,'ADMINISTRATION_RECORD' as measurement_type_concept_id
    ,'EQUAL' as operator_concept_id
    ,cast(regexp_extract(met.Data1, r'[0-9]+\.*[0-9]*') as float64) as value_as_number
    ,cast(null as string) as value_as_concept_id
    ,case met.label
        when "BMI" then "kg/m2"
        when "Gewicht" then "kg"
        when "Lengte" then "cm"
        else cast(null as string)
        end as unit_concept_id
    ,cast(null as float64) as range_low
    ,cast(null as float64) as range_high
    ,cast(null as string) as provider_id
    ,array_agg(vs.x ignore nulls order by vs.x asc)[safe_offset(0)] as visit_occurrence_id
    ,cast(null as string) as visit_detail_id
    ,met.label as measurement_source_value
    ,cast(null as string) as measurement_source_concept_id
    ,case met.label
        when "BMI" then "kilogram per square meter"
        when "Gewicht" then "kilogram"
        when "Lengte" then "centimeter"
        else cast(null as string)
        end as unit_source_value
    ,cast(null as string) as unit_source_concept_id
    ,met.Data1 as value_source_value 
    ,cast(null as string) as measurement_event_id
    ,cast(null as string) as meas_event_field_concept_id    
from {{project_id}}.{{dataset_id_raw}}.METINGEN_METING_FLAT met
left join `{{project_id}}.{{dataset_id_work}}.person_id_swap` p
on met.patientnr = p.x
left join `{{project_id}}.{{dataset_id_omop}}.visit_occurrence` v
on CAST(meet_datum as DATE) >= v.visit_start_date 
    and CAST(meet_datum as DATE) <= v.visit_end_date
    and p.y = v.person_id
left join `{{project_id}}.{{dataset_id_work}}.visit_occurrence_id_swap` vs
on v.visit_occurrence_ID = vs.y
where met.label in ("BMI", "Gewicht", "Lengte")
group by met.label, met.patientnr, met.Data1, met.meet_datum, met.meet_tijd, met.AutoID
