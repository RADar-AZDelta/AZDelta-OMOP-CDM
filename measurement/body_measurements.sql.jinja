{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
with cte as (
    select distinct
        concat("METINGEN_",upper(met.label),'_', AutoID) as measurement_id	
        ,cast(met.patientnr as string) as person_id
        ,met.label as measurement_concept_id
        ,CAST(met.meet_datum as DATE) as measurement_date
        ,DATETIME(
        CAST(met.meet_datum as DATE), 
        PARSE_TIME("%T", met.meet_tijd)
        ) as measurement_datetime  
        ,met.meet_tijd as measurement_time
        ,'ADMINISTRATION_RECORD' as measurement_type_concept_id
        ,'EQUAL' as operator_concept_id
        ,cast(regexp_extract(met.Data1, r'[0-9]+\.*[0-9]*') as float64) as value_as_number
        ,cast(null as string) as value_as_concept_id
        ,case met.label
            when "BMI" then "kg/m2"
            when "Gewicht" then "kg"
            when "Lengte" then "cm"
            else cast(null as string)
            end as unit_concept_id
        ,cast(null as float64) as range_low
        ,cast(null as float64) as range_high
        --,cast(null as string) as provider_id
        --,array_agg(vs.x ignore nulls order by vs.x asc)[safe_offset(0)] as visit_occurrence_id
        --,cast(null as string) as visit_detail_id
        ,met.label as measurement_source_value
        ,cast(null as string) as measurement_source_concept_id
        ,case met.label
            when "BMI" then "kilogram per square meter"
            when "Gewicht" then "kilogram"
            when "Lengte" then "centimeter"
            else cast(null as string)
            end as unit_source_value
        ,cast(null as string) as unit_source_concept_id
        ,met.Data1 as value_source_value 
        ,cast(null as string) as measurement_event_id
        ,cast(null as string) as meas_event_field_concept_id    
    from {{project_id}}.{{dataset_id_raw}}.METINGEN_METING_FLAT met
    where met.label in ("BMI", "Gewicht", "Lengte")
)
SELECT cte.*
    , COALESCE(ARRAY_AGG(vd.provider_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)], ARRAY_AGG(v.provider_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)]) as provider_id
    , ARRAY_AGG(v.visit_occurrence_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_occurrence_id
    , ARRAY_AGG(vd.visit_detail_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_detail_id
FROM cte
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_occurrence_upload v ON v.person_id = cte.person_id AND cte.measurement_datetime >= v.visit_start_datetime and cte.measurement_datetime <= v.visit_end_datetime 
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_detail_upload vd ON v.visit_occurrence_id = vd.visit_occurrence_id AND cte.measurement_datetime >= vd.visit_detail_start_datetime and cte.measurement_datetime <= vd.visit_detail_start_datetime
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20