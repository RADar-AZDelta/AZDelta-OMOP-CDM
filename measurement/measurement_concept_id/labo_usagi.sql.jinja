{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
WITH cte_loinc AS (
  SELECT DISTINCT lo.BEP
        ,ARRAY_AGG(le.EXTERNALCODE IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] EXTERNALCODE
        ,ARRAY_AGG(lo.DESC IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] DESC_
        ,ARRAY_AGG(cm.code_Value IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] code_Value
        ,ARRAY_AGG(ml.LOINC___Number IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] LOINC___Number
        ,ARRAY_AGG(ml.LOINC___Component IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] LOINC___Component
        ,ARRAY_AGG(ml.Label_NL IGNORE NULLS ORDER BY ml.LOINC___NUMBER DESC)[SAFE_OFFSET(0)] Label_NL
  FROM {{project_id}}.{{dataset_id_raw_3}}.LAB_EXTLABTST le
  left join {{project_id}}.{{dataset_id_raw}}.LAB_L_B_OMS lo on lo.BEP = le.LABTESTCODE
  left join {{project_id}}.{{dataset_id_raw}}.LAB_BRON lb on lb.BRONCODE = le.SOURCECODE and lb.ACTIEF
  left join {{project_id}}.{{dataset_id_raw_3}}.code_to_medidoc cm  on le.EXTERNALCODE = cm.prop_Mnemonic
  left join {{project_id}}.{{dataset_id_raw_3}}.medidoc_to_loinc ml on TRIM(cm.code_Value) = TRIM(ml.Medidoc)
  group by lo.BEP
)
SELECT 
  concat('LABO_',l.BEP) sourceCode
  ,regexp_replace(replace(array_to_string([l.LOINC___Component, l.Label_NL, l.DESC_, l.BEP], ' - '),',',';'),'\n|\r|\t',' ') sourceName
  ,COUNT(*) sourceFrequency
  ,CAST(NULL AS STRING) AS sourceAutoAssignedConceptIds
  ,replace(replace(COALESCE(l.LOINC___Number, array_to_string([l.code_Value, REGEXP_REPLACE(l.EXTERNALCODE,'"|[|]','')], ' - ')),',',';'),'\n|\r|\t',' ') ADD_INFO_extra_codes
  ,IF(c2.concept_id IS not NULL, 1, 0) AS matchScore
  ,IF(c2.concept_id is not NULL,'APPROVED', 'UNCHECKED') AS mappingStatus
  ,IF(c2.concept_id is not NULL,'EQUAL','UNREVIEWED') AS equivalence
  ,'etl' AS statusSetBy
  ,UNIX_MILLIS(CURRENT_TIMESTAMP()) as statusSetOn
  ,COALESCE(c2.concept_id,0) conceptId
  ,coalesce(c2.concept_name,"Unmapped") conceptName
  ,coalesce(c2.domain_id,NULL) domainId
  ,'MAPS_TO' AS mappingType
  ,IF(c2.concept_id is not NULL,'AUTO MAPPED','NOT AUTO MAPPED') AS comment
  ,'etl' AS createdBy
  ,UNIX_MILLIS(CURRENT_TIMESTAMP()) as createdOn
  ,cast(null AS string) AS assignedReviewer
FROM cte_loinc l
left join {{project_id}}.{{dataset_id_raw}}.LAB_HUIDIGE_UITSLAG lhu on l.BEP = lhu.BEPCODE
left join {{project_id}}.{{dataset_id_omop}}.concept c on l.LOINC___Number = c.concept_code
      AND c.vocabulary_id = 'LOINC'
left join {{project_id}}.{{dataset_id_omop}}.concept_relationship cr on c.concept_id = cr.concept_id_1
      AND cr.relationship_id = "Maps to"
left join {{project_id}}.{{dataset_id_omop}}.concept c2 on cr.concept_id_2 = c2.concept_id
      AND c.standard_concept = 'S'
GROUP BY sourceCode, sourceName, ADD_INFO_extra_codes, conceptId, conceptName, domainId, c2.concept_id
ORDER BY sourceFrequency DESC