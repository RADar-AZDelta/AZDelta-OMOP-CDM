{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
with awell_vragenlijsten as (
    select distinct 
        fq.form_id
        ,fq.question_id
        ,fq.label
        ,fq.label_en
        ,fq.sub_question_id
        ,fq.sub_label
        ,fq.sub_label_en
        ,fr.response_label_en as structured_answer_en
        ,fr.response_label_nl as structured_answer_nl
        ,IF(fr.response_label_nl is not null, r.response_value, null) as structured_answer_code
        ,IF(fr.response_label_nl is null, r.response_value, null) as free_answer
        ,u.patient_code
        ,u.doctor_id
        ,r.submission_date
        ,r.step_id
        ,r.episode_name
        
    from (select distinct form_id, question_id, label, label_en, sub_question_id, sub_label, sub_label_en
        from {{project_id}}.awell.form_questions where form_id = "lung_cancer_baseline_clinical_azdelta") fq
    inner join (select distinct form_id, question_id, submission_date, step_id, episode_name, sub_question_id, user_id, response_value
            from {{project_id}}.awell.responses where not response_value = '999') r on fq.form_id = r.form_id 
        and fq.question_id = r.question_id 
        and ((fq.sub_question_id is null and r.sub_question_id is null) or (fq.sub_question_id = r.sub_question_id))
    left outer join (select distinct form_id, question_id, response_value, response_label_nl, response_label_en 
            from {{project_id}}.awell.form_responses) fr on fr.form_id = fq.form_id 
        and fr.question_id = fq.question_id
        and fr.response_value = r.response_value
    inner join (select distinct user_id, patient_code, doctor_id from {{project_id}}.awell.users) u on u.user_id = r.user_id
)
select distinct
   concat('AWELL_', form_id, '_', coalesce(sub_question_id, question_id), '_', submission_date, '_', patient_code) as measurement_id	
    ,patient_code as person_id
    ,concat('AWELL_',question_id) as measurement_concept_id
    ,cast(submission_date as date) as measurement_date
    ,cast(substring(cast(submission_date as string), 1,19) as datetime) as measurement_datetime
    ,cast(null as string) as measurement_time
    ,'ADMINISTRATION_RECORD' as measurement_type_concept_id
    ,case when regexp_contains(free_answer, 'minder dan') then 'MOC_LESS' else 'MOC_EQUAL' end as operator_concept_id 
    ,case when regexp_contains(free_answer, '[0-9]') is false then null
     else cast(replace(regexp_replace(trim(free_answer, ','), r'[^0-9,\.]', ''), ',', '.') as float64) end as value_as_number
    ,concat('AWELL_',question_id, '_', coalesce(replace(structured_answer_nl, ' ', '_'), replace(free_answer, ' ', '_'))) as value_as_concept_id
    ,concat('AWELL_', question_id) as unit_concept_id 
    ,cast(null as float64) as range_low
    ,cast(null as float64) as range_high
    ,cast(null as string) as provider_id
    ,cast(null as string) as visit_occurrence_id
    ,cast(null as string) as visit_detail_id
    ,concat('AWELL_',question_id) as measurement_source_value
    ,cast(null as string) as measurement_source_concept_id
    ,cast(null as string) as unit_source_value
    ,cast(null as string) as unit_source_concept_id
    ,concat('AWELL_',question_id, '_', coalesce(replace(structured_answer_nl, ' ', '_'), replace(free_answer, ' ', '_'))) as value_source_value 
    ,cast(null as string) as measurement_event_id
    ,cast(null as string) as meas_event_field_concept_id
from awell_vragenlijsten
inner join {{project_id}}.{{dataset_id_omop}}.source_to_concept_map scm
on scm.source_code = concat('AWELL_', question_id)
inner join {{project_id}}.{{dataset_id_omop}}.concept c
on scm.target_concept_id = c.concept_id
where c.domain_id = 'Measurement'
