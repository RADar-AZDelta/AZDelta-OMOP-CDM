{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
WITH cte AS (
    select 
        concat('STUDIE_', kuur.code, '_', CAST(deel.startdt as DATE), '_', deel.starttd) as observation_id
        ,kuur.patnum as person_id
        ,'HIX_STUDIEMEDICATIE' as observation_concept_id
        ,cast(deel.startdt as DATE) as observation_date
        ,DATETIME(
            CAST(deel.startdt as DATE), 
            CASE
                WHEN REGEXP_CONTAINS(deel.starttd, r'^[0-9]{2}:[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M:%S', deel.starttd)
                WHEN REGEXP_CONTAINS(deel.starttd, r'^[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M', deel.starttd)
                ELSE TIME(0, 0, 0)
            END
        ) as observation_datetime      
        ,'ADMINISTRATION_RECORD' as observation_type_concept_id
        ,cast(null as float64) as value_as_number
        ,kuur.omschrijv as value_as_string
        ,cast(null as string) as value_as_concept_id 
        ,cast(null as string) as qualifier_concept_id
        ,cast(null as string) as unit_concept_id
        --,cast(null as string) as provider_id
        --,cast(null as string) as visit_occurrence_id
        --,cast(null as string) as visit_detail_id
        ,'HIX_STUDIEMEDICATIE' as observation_source_value
        ,cast(null as string) as observation_source_concept_id
        ,cast(null as string) as unit_source_value
        ,cast(null as string) as qualifier_source_value
        ,kuur.omschrijv as value_source_value
        ,cast(null as string) as observation_event_id
        ,cast(null as string) as obs_event_field_concept_id 
    from {{project_id}}.{{dataset_id_raw}}.MEDICAT_KUUR kuur 
    inner join {{project_id}}.{{dataset_id_raw}}.MEDICAT_KUURDEEL deel on kuur.CODE = deel.KUURCD
    where omschrijv like '%ST %'
        and concat('STUDIE_', kuur.code, '_', CAST(deel.startdt as DATE), '_', deel.starttd) is not null
)
SELECT cte.*
    , COALESCE(ARRAY_AGG(vd.provider_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)], ARRAY_AGG(v.provider_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)]) as provider_id
    , ARRAY_AGG(v.visit_occurrence_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_occurrence_id
    , ARRAY_AGG(vd.visit_detail_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_detail_id
FROM cte
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_occurrence_upload v ON v.person_id = cte.person_id AND cte.observation_datetime >= v.visit_start_datetime and cte.observation_datetime <= v.visit_end_datetime 
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_detail_upload vd ON v.visit_occurrence_id = vd.visit_occurrence_id AND cte.observation_datetime >= vd.visit_detail_start_datetime and cte.observation_datetime <= vd.visit_detail_end_datetime
inner join {{project_id}}.{{dataset_id_work}}.person_upload p
on cte.person_id = p.person_id
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18