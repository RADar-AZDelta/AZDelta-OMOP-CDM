{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
WITH automapped AS (
    SELECT automapped_arrays.* EXCEPT (conceptId_arrays), c_std.concept_id concept_id
    FROM (
        SELECT CONCAT('EPD_', e.CODE) AS sourceCode
            , STRING_AGG(DISTINCT REGEXP_REPLACE(REGEXP_REPLACE(cc.Omschrijving,r',',r'.'),r'\s',r' '), ". ") AS sourceName
            , COUNT(*) AS sourceFrequency
            , ARRAY_AGG(DISTINCT COALESCE(c_snomed.concept_id, c_syn.concept_id) IGNORE NULLS) AS conceptId_arrays
            --, ARRAY_AGG(DISTINCT COALESCE(c_snomed.concept_id, cr_icd10cm_snomed.concept_id_2, cr_icd10_snomed.concept_id_2, c_syn.concept_id) IGNORE NULLS) AS conceptId_arrays
        FROM `{{project-id}}.{{dataset-id-raw}}.DOSSIER_EPDDIAG` e
        LEFT JOIN `{{project-id}}.{{dataset-id-raw}}.CODELYST_CODEOMS` cc 
        ON e.CODE = cc.CODE

        LEFT JOIN `{{project-id}}.{{dataset-id-raw}}.CODELYST_CODEMAP` cm_snomed
        ON cc.CODE = cm_snomed.SourceCode AND LOWER(TRIM(cm_snomed.TargetListType)) = "snomed"
        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c_snomed
        ON cm_snomed.TargetExternalCode = c_snomed.concept_code
            AND c_snomed.vocabulary_id = "SNOMED" 
        /* CHECK IF ICD CODES ARE CORRECT IN NEWER VERSIONS OF CODELYST_CODEMAP BEFORE ADDING
        LEFT JOIN `{{project-id}}.{{dataset-id-raw}}.CODELYST_CODEMAP` cm_icd10
        ON cc.CODE = cm_icd10.SourceCode AND LOWER(TRIM(cm_icd10.TargetListType)) = "icd10"
        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c_icd10cm
        ON cm_icd10.TargetExternalCode = c_icd10cm.concept_code
            AND c_icd10cm.vocabulary_id = "ICD10CM"
        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept_relationship` cr_icd10cm_snomed
        ON c_icd10cm.concept_id = cr_icd10cm_snomed.concept_id_1
            AND cr_icd10cm_snomed.relationship_id = 'Maps to'

        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c_icd10
        ON cm_icd10.TargetExternalCode = c_icd10.concept_code
            AND c_icd10.vocabulary_id = "ICD10"
        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept_relationship` cr_icd10_snomed
        ON c_icd10cm.concept_id = cr_icd10_snomed.concept_id_1
            AND cr_icd10_snomed.relationship_id = 'Maps to'
        */

        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept_synonym` cs
        ON cc.Omschrijving = cs.concept_synonym_name
            AND cc.LanguageCode = "en-GB"
        LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c_syn
        ON c_syn.concept_id = cs.concept_id
        
        WHERE e.CODE IS NOT NULL AND TRIM(e.CODE) <> '' AND cc.Omschrijving IS NOT NULL AND TRIM(cc.Omschrijving) <> ''
        GROUP BY sourceCode
    ) automapped_arrays
    LEFT JOIN UNNEST(automapped_arrays.conceptId_arrays) AS conceptId
    LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept_relationship` cr
    ON conceptId = cr.concept_id_1
        AND cr.relationship_id = 'Maps to value'
    LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c_std
    ON cr.concept_id_2 = c_std.concept_id
)
SELECT DISTINCT
    a.sourceCode
    ,a.sourceName
    ,a.sourceFrequency
    ,CAST(NULL AS STRING) AS sourceAutoAssignedConceptIds
    ,1 AS matchScore
    ,'APPROVED' AS mappingStatus
    ,'EQUAL' AS equivalence
    ,'etl' AS statusSetBy
    ,UNIX_MILLIS(CURRENT_TIMESTAMP()) as statusSetOn
    ,COALESCE(a.concept_id,0) conceptId
    ,c.concept_NAME AS conceptName
    ,c.domain_id AS domainId
    ,'MAPS_TO' AS mappingType
    ,"AUTO MAPPED" AS comment
    ,"etl" AS createdBy
    ,UNIX_MILLIS(CURRENT_TIMESTAMP()) as createdOn
    ,cast(null AS string) AS assignedReviewer
FROM automapped a
LEFT JOIN `{{project-id}}.{{dataset-id-omop}}.concept` c
ON a.concept_id = c.concept_id
    AND c.standard_concept = 'S'
WHERE a.concept_id IS NOT NULL
ORDER BY a.sourceFrequency DESC