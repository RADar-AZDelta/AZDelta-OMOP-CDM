{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
WITH cte AS (
    SELECT
        CONCAT('EPD_', e.DIAG_ID) AS observation_id	
        ,e.PATIENTNR AS person_id
        ,scm.source_code AS observation_concept_id
        ,DATE(COALESCE(e.DATUM, e.REGISTRATIONDATE)) AS observation_date
        ,DATETIME(
            DATE(COALESCE(e.DATUM, e.REGISTRATIONDATE)), 
            CASE
                WHEN REGEXP_CONTAINS(e.STARTTIJD, r'^[0-9]{2}:[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M:%S', e.STARTTIJD)
                WHEN REGEXP_CONTAINS(e.STARTTIJD, r'^[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M', e.STARTTIJD)
                ELSE TIME(0, 0, 0)
            END        
        ) AS observation_datetime
        ,'ADMINISTRATION_RECORD' AS observation_type_concept_id
        ,cast(NULL AS FLOAT64) AS value_as_number
        ,cast(NULL AS STRING) AS value_as_string
        ,CAST(NULL AS STRING) AS value_as_concept_id
        ,cast(NULL AS STRING) AS qualifier_concept_id
        ,cast(NULL AS STRING) AS unit_concept_id
        ,e.ARTSCODE AS provider_id
        --,ARRAY_AGG(vs.x IGNORE NULLS ORDER BY vs.x ASC)[SAFE_OFFSET(0)] visit_occurrence_id
        --,cast(NULL AS STRING) AS visit_detail_id
        ,scm.source_code AS observation_source_value
        ,scm.source_code AS observation_source_concept_id
        ,cast(NULL AS STRING) AS unit_source_value
        ,cast(NULL AS STRING) AS qualifier_source_value
        ,cast(null as string) as value_source_value
        ,cast(NULL AS string) AS observation_event_id
        ,cast(NULL AS STRING) AS obs_event_field_concept_id
    FROM `{{project_id}}.{{dataset_id_raw}}.DOSSIER_EPDDIAG` e
    LEFT JOIN `{{project_id}}.{{dataset_id_raw}}.CODELYST_CODEOMS` cc ON e.CODE = cc.CODE
    INNER JOIN `{{project_id}}.{{dataset_id_omop}}.source_to_concept_map` scm ON concat('EPD_', e.CODE) = scm.source_code
    INNER JOIN `{{project_id}}.{{dataset_id_omop}}.concept` c ON scm.target_concept_id = c.concept_id
    WHERE e.CODE IS NOT NULL AND TRIM(e.CODE) <> '' 
        AND cc.Omschrijving IS NOT NULL AND TRIM(cc.Omschrijving) <> ''
        AND e.DIAG_ID IS NOT NULL AND TRIM(e.DIAG_ID) <> ''
        AND e.PATIENTNR IS NOT NULL AND TRIM(e.PATIENTNR) <> ''
        AND c.domain_id not in ("Condition","Procedure","Drug","Measurement","Device")
)
SELECT cte.*
    , ARRAY_AGG(v.visit_occurrence_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_occurrence_id
    , ARRAY_AGG(vd.visit_detail_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_detail_id
FROM cte
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_occurrence_upload v ON v.person_id = cte.person_id AND cte.observation_datetime >= v.visit_start_datetime and cte.observation_datetime <= v.visit_end_datetime 
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_detail_upload vd ON v.visit_occurrence_id = vd.visit_occurrence_id AND cte.observation_datetime >= vd.visit_detail_start_datetime and cte.observation_datetime <= vd.visit_detail_start_datetime
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
