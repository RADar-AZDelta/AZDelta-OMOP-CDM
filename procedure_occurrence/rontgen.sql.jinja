{# Copyright 2022 RADar-AZDelta #}
{# SPDX-License-Identifier: gpl3+ #}
with cte as (
	select 
		concat('RAD_', rr.ONDERZNR, '_', rrv.RONTVERRID) as procedure_occurrence_id
		,rr.PATIENTNR as person_id
		,concat('RAD_', rrv.CODE,'_',rrmodinst.MODTYPECODE) as procedure_concept_id -- exam code
		,DATE(rr.ONDERZDAT) as procedure_date
		,DATETIME(
			DATE(rr.ONDERZDAT),
			CASE
					WHEN REGEXP_CONTAINS(rr.AFSPRTIJD, r'^[0-9]{2}:[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M:%S', rr.AFSPRTIJD)
					WHEN REGEXP_CONTAINS(rr.AFSPRTIJD, r'^[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M', rr.AFSPRTIJD)
					ELSE TIME(0, 0, 0)
			END		
		) as procedure_datetime
		,DATE(rr.ONDERZDAT) as procedure_end_date
		,DATETIME(
			DATE(rr.ONDERZDAT),
			CASE
					WHEN REGEXP_CONTAINS(rr.AFSPRTIJD, r'^[0-9]{2}:[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M:%S', rr.AFSPRTIJD)
					WHEN REGEXP_CONTAINS(rr.AFSPRTIJD, r'^[0-9]{2}:[0-9]{2}$') THEN PARSE_TIME('%H:%M', rr.AFSPRTIJD)
					ELSE TIME(0, 0, 0)
			END
		) as procedure_end_datetime
		,'ADMINISTRATION_RECORD' as procedure_type_concept_id
		,cast(null as string) as modifier_concept_id
		,1 as quantity
		,rr.AANVRAGER as provider_id
		,rrv.CODE as procedure_source_value
		,cast(null as string) as procedure_source_concept_id
		,cast(null as string) as modifier_source_value
	from {{project_id}}.{{dataset_id_raw}}.RONTGEN_RONTGEN rr
	inner join {{project_id}}.{{dataset_id_raw}}.ORDERCOM_ORDSTAT ostat on ostat.STATUSCODE = rr.WORKFSTATUS
	inner join {{project_id}}.{{dataset_id_raw}}.RONTGEN_RONTVERR rrv on rrv.ONDERZNR = rr.ONDERZNR
	--inner join {{project_id}}.{{dataset_id_raw}}.RONTGEN_VERRCODE rrvcode on rrvcode.CODE = rrv.CODE
	inner join hix.RONTGEN_MODINST rrmodinst on rrv.MODINST = rrmodinst.MODINSTID
	where rr.AANVRAAGOK = true
		and rr.ONDERZDAT < CAST(DATE_ADD(CURRENT_DATE(), INTERVAL 1 DAY) AS TIMESTAMP)
		and ostat.OMSCHR not in ('Geannuleerd', 'Opgeroepen', 'Afgesproken', 'Verzocht', 'Gemeld', 'Ingevoerd')
		--and rr.PATIENTNR = '2014101285'
	--order by rr.ONDERZDAT desc, rr.AFSPRTIJD desc
)
SELECT cte.*
    , ARRAY_AGG(v.visit_occurrence_id ORDER BY v.visit_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_occurrence_id
    , ARRAY_AGG(vd.visit_detail_id ORDER BY vd.visit_detail_start_datetime DESC LIMIT 1)[OFFSET(0)] as visit_detail_id
FROM cte
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_occurrence_upload v ON v.person_id = cte.person_id AND cte.procedure_datetime >= v.visit_start_datetime and cte.procedure_datetime <= v.visit_end_datetime 
LEFT OUTER JOIN {{project_id}}.{{dataset_id_work}}.visit_detail_upload vd ON v.visit_occurrence_id = vd.visit_occurrence_id AND cte.procedure_datetime >= vd.visit_detail_start_datetime and cte.procedure_datetime <= vd.visit_detail_end_datetime
inner join {{project_id}}.{{dataset_id_work}}.person_upload p
on cte.person_id = p.person_id
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14