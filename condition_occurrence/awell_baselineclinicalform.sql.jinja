-- currently limited to form_id = lung_cancer_baseline_clinical_azdelta

with awell_vragenlijsten as (
    select distinct 
        fq.form_id
        ,fq.question_id
        ,fq.label
        ,fq.label_en
        ,fq.sub_question_id
        ,fq.sub_label
        ,fq.sub_label_en
        ,fr.response_label_en as structured_answer_en
        ,fr.response_label_nl as structured_answer_nl
        ,IF(fr.response_label_nl is not null, r.response_value, null) as structured_answer_code
        ,IF(fr.response_label_nl is null, r.response_value, null) as free_answer
        ,u.patient_code
        ,u.doctor_id
        ,r.submission_date
        ,r.step_id
        ,r.episode_name
    from {{project_id}}.awell.form_questions fq
    inner join {{project_id}}.awell.responses r on fq.form_id = r.form_id 
        and fq.question_id = r.question_id 
        and ((fq.sub_question_id is null and r.sub_question_id is null) or (fq.sub_question_id = r.sub_question_id))
    left outer join {{project_id}}.awell.form_responses fr on fr.form_id = fq.form_id 
        and fr.question_id = fq.question_id
        and fr.response_value = r.response_value
    inner join {{project_id}}.awell.users u on u.user_id = r.user_id
    where fq.form_id = "lung_cancer_baseline_clinical_azdelta"
    order by fq.form_id, fq.question_id, fq.sub_question_id, structured_answer_nl, free_answer
)
select distinct
    concat('AWELL_', form_id, '_', coalesce(sub_question_id, question_id), cast(submission_date as date), '_', patient_code) as condition_occurrence_id
    ,patient_code as person_id
    ,case when question_id = 'mutation_status' then  concat('AWELL_', question_id, '_',sub_question_id) 
    else concat('AWELL_',question_id)
    end  as condition_concept_id
    ,case when label = 'Date of pathological or clinical diagnosis' then cast(substring(regexp_replace(free_answer, r'[^0-9-T:]',''), 2, 10) as date) else cast(submission_date as date) end as condition_start_date
    ,case when label = 'Date of pathological or clinical diagnosis' then cast(substring(regexp_replace(free_answer, r'[^0-9-T:]',''), 2, 19) as datetime) 
    else cast(submission_date as datetime) end as condition_start_datetime
    ,cast(null as date) as condition_end_date
    ,cast(null as datetime) as condition_end_datetime
    ,'ADMINISTRATION_RECORD' as condition_type_concept_id
    ,'MZG_TYPE_N' as condition_status_concept_id 
    ,cast(null as string) as stop_reason
    ,cast(null as string) as provider_id
    ,cast(null as string) as visit_occurrence_id
    ,cast(null as string) as visit_detail_id
    ,case when question_id = 'mutation_status' then  concat('AWELL_', question_id, '_',sub_question_id) 
    else concat('AWELL_',question_id) end as condition_source_value
    ,cast(null as string) as condition_source_concept_id
    ,cast(null as string) as condition_status_source_value 
from awell_vragenlijsten
inner join {{project_id}}.{{dataset_id_work}}.condition_occurrence__condition_concept_id_usagi c 
on concat('AWELL_', question_id, '_',sub_question_id) = c.sourceCode
inner join {{project_id}}.{{dataset_id_work}}.condition_occurrence__condition_concept_id_usagi c2
on concat(
    case when question_id = 'mutation_status' 
        then concat('AWELL_', question_id, '_', sub_question_id) 
        else concat('AWELL_', question_id)
        end
    , '_'
    , coalesce(replace(structured_answer_nl, ' ', '_'), replace(free_answer, ' ', '_'))) = c2.sourceCode
where c.domainId = 'Condition' and structured_answer_en = 'Yes' and not c.conceptId = 0